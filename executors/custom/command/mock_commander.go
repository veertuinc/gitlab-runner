// Code generated by mockery v1.0.0. DO NOT EDIT.

package command

import mock "github.com/stretchr/testify/mock"
import os "os"

// mockCommander is an autogenerated mock type for the commander type
type mockCommander struct {
	mock.Mock
}

// Process provides a mock function with given fields:
func (_m *mockCommander) Process() *os.Process {
	ret := _m.Called()

	var r0 *os.Process
	if rf, ok := ret.Get(0).(func() *os.Process); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*os.Process)
		}
	}

	return r0
}

// Start provides a mock function with given fields:
func (_m *mockCommander) Start() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Wait provides a mock function with given fields:
func (_m *mockCommander) Wait() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
