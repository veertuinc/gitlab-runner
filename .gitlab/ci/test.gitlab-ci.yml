include:
- template: License-Management.gitlab-ci.yml

# Overriding 'License-Management.gitlab-ci.yml' template, because
# we need to replace the only:refs: rules with our own, the same
# as in `.merge_request_pipelines` template.
license_management:
  only:
    refs:
    - merge_requests
    - master@gitlab-org/gitlab-runner
    - /\Av[0-9]+\.[0-9]+\.[0-9]+(-rc[0-9]+)?\Z/@gitlab-org/gitlab-runner

docs lint:
  image: "registry.gitlab.com/gitlab-org/gitlab-docs:lint"
  stage: test
  extends:
  - .merge_request_pipelines
  - .no_cache_and_dependencies
  script:
  # Lint prose
  - vale --minAlertLevel error docs
  # Lint Markdown
  - markdownlint --config .markdownlint.json 'docs/**/*.md'
  # Prepare docs for build
  - mv docs/ /tmp/gitlab-docs/content/$DOCS_GITLAB_REPO_SUFFIX
  - cd /tmp/gitlab-docs
  # Build HTML from Markdown
  - bundle exec nanoc
  # Check the internal links
  - bundle exec nanoc check internal_links
  # Check the internal anchor links
  - bundle exec nanoc check internal_anchors

check feature flags docs:
  stage: test
  extends:
  - .merge_request_pipelines
  - .no_cache_and_dependencies
  script:
  - cp docs/configuration/feature-flags.md docs/configuration/feature-flags.md.orig
  - make update_feature_flags_docs
  - |
    diff docs/configuration/feature-flags.md.orig docs/configuration/feature-flags.md || (
      echo
      echo "Feature Flags list in documentation is not up-to-date"
      echo "Run 'make update_feature_flags_docs' to upate it"
      echo
      exit 1
    )

check modules:
  stage: test
  extends:
  - .merge_request_pipelines
  - .except_docs
  - .no_cache_and_dependencies
  script:
  - make check_modules

check mocks:
  stage: test
  extends:
  - .merge_request_pipelines
  - .except_docs
  - .no_cache_and_dependencies
  script:
  - make check_mocks

code_quality:
  stage: test
  extends:
  - .merge_request_pipelines
  - .except_docs
  - .no_cache_and_dependencies
  image: docker:${DOCKER_VERSION}-git
  services:
  - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_DRIVER: overlay2
    CODECLIMATE_FORMAT: json
  script:
  - ./scripts/codequality analyze -f json --dev | tee gl-code-quality-report.json
  artifacts:
    paths: [gl-code-quality-report.json]
    expire_in: 7d

unit test:
  extends:
  - .merge_request_pipelines
  - .docker
  stage: test
  parallel: 8
  variables:
    GIT_LFS_256_CHECKSUM: 7be85238cbbb957ab25de52b60279d40ba40d3faa72eeb2cb9fa77d6d92381e5
  before_script:
  # This' script content as well as the definition of GIT_LFS_256_CHECKSUM should be moved to
  # "prepare ci image". Git LFS should be installed inside of the CI image. Unfortunately, building
  # this image is currently blocked because of https://gitlab.com/gitlab-org/gitlab-runner/issues/3946.
  # After we will resolve this issue, we should update the CI configuration and move the Git LFS installation
  # to the proper place.
  - ./ci/install_git_lfs
  script:
  - source ci/touch_make_dependencies
  - make parallel_test_execute
  artifacts:
    paths:
    - .cover/*
    - .testoutput/*
    when: always
    expire_in: 7d

unit test with race:
  extends:
  - unit test
  allow_failure: true
  variables:
    GIT_LFS_256_CHECKSUM: 7be85238cbbb957ab25de52b60279d40ba40d3faa72eeb2cb9fa77d6d92381e5
    CGO_ENABLED: "1"
    TESTFLAGS: "-cover -race"

.windows test:
  extends:
  - .merge_request_pipelines_on_gitlab_org_gitlab_runner
  - .except_docs
  stage: test
  parallel: 3
  variables:
    GOROOT: "C:\\Go"
  before_script:
  - if (Test-Path $GOPATH) { Remove-Item -Force -Recurse $GOPATH }
  - New-Item $PKG_BASE_DIR -ItemType directory -Force
  - New-Item -ItemType SymbolicLink -Path $PKG_BUILD_DIR -Value $CI_PROJECT_DIR
  - cd $PKG_BUILD_DIR
  script:
  - .\ci\test_windows.ps1
  after_script:
  - if (Test-Path $PKG_BUILD_DIR) { $(Get-Item $PKG_BUILD_DIR).Delete() }
  artifacts:
    paths:
    - .testoutput/*
    when: always
    expire_in: 7d
  allow_failure: true

windows 1803 tests:
  extends:
  - .windows test
  - .windows1803

windows 1809 tests:
  parallel: 8
  extends:
  - .windows test
  - .windows1809

git 1.7.1:
  extends:
  - .merge_request_pipelines
  - .except_docs
  image: centos:6
  stage: test
  variables:
    GOROOT: /usr/local/go
    GOPATH: /go
    CGO_ENABLED: 0
    OUR_PACKAGES: gitlab.com/gitlab-org/gitlab-runner/executors/shell gitlab.com/gitlab-org/gitlab-runner/shells
  before_script:
  - unset GPG_KEY
  - yum install -y -q git && git version
  - curl https://storage.googleapis.com/golang/go1.13.8.linux-amd64.tar.gz | tar zx -C $(dirname "$GOROOT")
  - export PATH=${GOPATH}/bin:${GOROOT}/bin:$PATH
  - source ci/touch_make_dependencies
  script:
  - make simple-test
