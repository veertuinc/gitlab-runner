// Code generated by mockery v1.0.0. DO NOT EDIT.

// This comment works around https://github.com/vektra/mockery/issues/155

package common

import mock "github.com/stretchr/testify/mock"

// MockJobTracePatch is an autogenerated mock type for the JobTracePatch type
type MockJobTracePatch struct {
	mock.Mock
}

// Offset provides a mock function with given fields:
func (_m *MockJobTracePatch) Offset() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// Patch provides a mock function with given fields:
func (_m *MockJobTracePatch) Patch() []byte {
	ret := _m.Called()

	var r0 []byte
	if rf, ok := ret.Get(0).(func() []byte); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	return r0
}

// SetNewOffset provides a mock function with given fields: newOffset
func (_m *MockJobTracePatch) SetNewOffset(newOffset int) {
	_m.Called(newOffset)
}

// TotalSize provides a mock function with given fields:
func (_m *MockJobTracePatch) TotalSize() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// ValidateRange provides a mock function with given fields:
func (_m *MockJobTracePatch) ValidateRange() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
